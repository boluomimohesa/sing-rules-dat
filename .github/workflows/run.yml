name: Build rules dat files
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *" # 6:30 AM UTC+8
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "GOAMD64=v3" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: boluomimohesa/sing-rules-dat

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout MetaCubeX/meta-rules-converter
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-converter
          path: convert

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: |
            community/go.sum
            convert/go.sum
      
      - name: Build geosite-lite.dat file
        env:
          sed: grep "DOMAIN" | grep -v "#" | sed -E "s/  - DOMAIN,/full:/g; s/  - DOMAIN-SUFFIX,//g; s/  - DOMAIN-KEYWORD,/keyword:/g" 
          bm7Base: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash"
        run: |
          cd community || exit 1
          mkdir -p data-lite

          curl -sSL ${{ env.bm7Base }}/Claude/Claude.yaml | ${{ env.sed }} > ./data-lite/claude
          curl -sSL ${{ env.bm7Base }}/OpenAI/OpenAI.yaml | ${{ env.sed }} > ./data-lite/openai
          curl -sSL ${{ env.bm7Base }}/Gemini/Gemini.yaml | ${{ env.sed }} > ./data-lite/gemini

          go run ./ --datapath=./data-lite --outputname geosite-lite.dat
      

      - name: Convert geo-lite to sing-rule-set
        env:
          NO_SKIP: true
        run: |
          mkdir -p sing-rule/geo-lite/geosite
          cd convert || exit 1
          go run ./ geosite -f ../community/geosite-lite.dat -o ../sing-rule/geo-lite/geosite -t sing-box
      
      - name: Merge ai file
        run: |
          sudo apt-get install -y moreutils
          cd sing-rule/geo-lite/geosite || exit 1
          wget https://github.com/SagerNet/sing-box/releases/download/v1.11.1/sing-box-1.11.1-linux-amd64.tar.gz -O singbox.tar.gz
          tar --strip-components=1 -xzvf singbox.tar.gz -C ./ --wildcards "*/sing-box"
          chmod 755 ./sing-box

          ./sing-box rule-set merge ./ai.json -c claude.json -c gemini.json -c openai.json
          jq  '.version = 2' ./ai.json | sponge ./ai.json
          ./sing-box rule-set compile ./ai.json

          # jq  '.version = 2' ./ai.json > tmp.json && mv ./tmp.json ./ai.json
          rm -rf ./*linux-amd64.tar.gz ./sing-box
      
      - name: Git push assets to "sing-rule" branch
        run: |
            cd sing-rule || exit 1
            ls
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git checkout -b sing
            git add .
            git commit -m "Released on ${{ env.BUILDTIME }}"
            git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -f -u origin sing

      - name: Purge jsdelivr CDN
        run: |
          cd sing-rule || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing/${file}"
          done
            