name: Build rules dat files
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *" # 6:30 AM UTC+8
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "GOAMD64=v3" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
        shell: bash
        
      - name: Checkout Mi
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            resouces

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout MetaCubeX/meta-rules-converter
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-converter
          path: convert

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: |
            community/go.sum
            convert/go.sum
      
      - name: Build geosite-lite.dat file
        env:
          sed: grep "DOMAIN" | grep -v "#" | sed -E "s/  - DOMAIN,/full:/g; s/  - DOMAIN-SUFFIX,//g; s/  - DOMAIN-KEYWORD,/keyword:/g" 
          sed2: sed -E "s/(.*):@.*/\1/g; s/^domain://g"
          sed3: sed "s/^domain://g"
          bm7Base: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash"
        run: |
          cd community || exit 1
          mkdir -p data-lite

          wget https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/release/geosite.dat
          echo $GITHUB_WORKSPACE          
          tools=$GITHUB_WORKSPACE/resources
          ls -la $tools
          chmod +x $tools/geo
          chmod +x $tools/remove-domain-script.sh

          $tools/geo unpack site -c 'category-ai-chat-!cn,category-dev' --out-dir ./data-lite ./geosite.dat
        
          cat ./data-lite/category-ai-chat-!cn

          $tools/remove-domain-script.sh ./data-lite

          # curl -sSL ${{ env.bm7Base }}/Claude/Claude.yaml | ${{ env.sed }} > ./data-lite/claude
          # curl -sSL ${{ env.bm7Base }}/OpenAI/OpenAI.yaml | ${{ env.sed }} > ./data-lite/openai
          # curl -sSL ${{ env.bm7Base }}/Gemini/Gemini.yaml | ${{ env.sed }} > ./data-lite/gemini

          # cat << EOF > ./data-lite/grok 
          # x.ai
          # grok.com
          # full:challenges.cloudflare.com
          # full:use.typekit.net
          # full:featureassets.org
          # EOF
          
          # go run ./ --datapath=./data --outputname=geosite-lite.dat --exportlists='category-dev,category-ai-chat-!cn'

          # ${{ env.sed2 }} ./category-dev.txt > ./data-lite/developer
          # ${{ env.sed2 }} ./category-ai-chat-!cn.txt > ./data-lite/ai

          go run ./ --datapath=./data-lite --outputname=geosite-lite.dat
      

      - name: Convert geo-lite to sing-rule-set
        run: |
          mkdir -p sing-rule/geo-lite/geosite
          cd convert || exit 1
          go run ./ geosite -f ../community/geosite-lite.dat -o ../sing-rule/geo-lite/geosite -t sing-box

      # - name: Convert geo-lite to meta-rule-set
      #   run: |
      #     mkdir -p meta-rule/geo-lite/geosite
      #     cd convert || exit 1
      #     go run ./ geosite -f ../community/geosite-lite.dat -o ../meta-rule/geo-lite/geosite
      #     rm -rf ../community/*.dat
      
      # - name: Merge ai file
      #   run: |
      #     cd sing-rule/bm7/geosite || exit 1
      #     wget -qO sing-box.tar.gz https://github.com/SagerNet/sing-box/releases/download/v1.11.1/sing-box-1.11.1-linux-amd64.tar.gz
      #     tar --strip-components=1 -xzf sing-box.tar.gz -C ./ --wildcards "*/sing-box"
      #     chmod 755 ./sing-box
          
          # ./sing-box rule-set merge ./ai.json -c claude.json -c gemini.json -c openai.json -c grok.json

          # 去重
          # chmod +x $GITHUB_WORKSPACE/resouces/dedup_json.py
          # python $GITHUB_WORKSPACE/resouces/dedup_json.py -f ./ai.json -w --bak=false

          # sudo apt-get install -y moreutils
          # jq  '.version = 2' ./ai.json | sponge ./ai.json

          # jq  '.version = 2' ./ai.json > tmp.json && mv ./tmp.json ./ai.json
          
          # ./sing-box rule-set compile ./ai.json

          # rm -rf ./*linux-amd64.tar.gz ./sing-box*
      
      - name: Git push assets to "sing-rule" branch
        run: |
            cd sing-rule || exit 1
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git checkout -b sing
            git add .
            git commit -m "Released on ${{ env.BUILDTIME }}"
            git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -f -u origin sing

      # - name: Git push assets to "meta-rule" branch
      #   run: |
      #       cd meta-rule || exit 1
      #       git init
      #       git config --local user.name "github-actions[bot]"
      #       git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #       git checkout -b meta
      #       git add .
      #       git commit -m "Released on ${{ env.BUILDTIME }}"
      #       git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
      #       git push -f -u origin meta

      - name: Purge jsdelivr CDN
        run: |
          cd sing-rule || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing/${file}"
          done

          # cd ../meta-rule || exit 1
          # for file in $(ls); do
          #   curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@meta/${file}"
          # done
            
